name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
- name: OWASP ZAP Baseline Scan
  # You may pin to the exact commit or the version.
  # uses: zaproxy/action-baseline@3aac1ff9578859a12d8b84c035f4e5394fe79f61
  uses: zaproxy/action-baseline@v0.5.0
  with:
    # GitHub Token to create issues in the repository
    token: # optional, default is ${{ github.token }}
    # Target URL
    target: 
    # Relative path of the ZAP configuration file
    rules_file_name: # optional
    # The Docker file to be executed
    docker_name: # default is owasp/zap2docker-stable
    # Additional command line options
    cmd_options: # optional
    # The title for the GitHub issue to be created
    issue_title: # optional, default is ZAP Scan Baseline Report
    # The action status will be set to fail if ZAP identifies any alerts during the baseline scan
    fail_action: # optional
    # The action will file the report to the GitHub issue using the issue_title input
    allow_issue_writing: # optional, default is true
